"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.splitIntoTwo = void 0;
const RTreeRectangle_js_1 = require("../r-tree/RTreeRectangle.js");
const sortRectanglesByHilbertCoordinates_js_1 = require("./sortRectanglesByHilbertCoordinates.js");
function splitIntoTwo(rectangles) {
    if (rectangles.length <= 1) {
        return rectangles;
    }
    const pivot = Math.floor(rectangles.length / 2);
    const sortedRectangles = (0, sortRectanglesByHilbertCoordinates_js_1.sortRectanglesByHilbertCoordinates)(rectangles);
    // console.log({ sortedRectangles, rectangles });
    const firstChildPartition = sortedRectangles.splice(0, pivot);
    const secondChildPartition = sortedRectangles;
    const sibling1Child = firstChildPartition[0];
    const sibling1 = new RTreeRectangle_js_1.RTreeRectangle({
        x: sibling1Child.x,
        y: sibling1Child.y,
        height: sibling1Child.height,
        width: sibling1Child.width
    });
    sibling1.insertChildren(firstChildPartition);
    const sibling2Child = secondChildPartition[0];
    const sibling2 = new RTreeRectangle_js_1.RTreeRectangle({
        x: sibling2Child.x,
        y: sibling2Child.y,
        height: sibling2Child.height,
        width: sibling2Child.width
    });
    sibling2.insertChildren(secondChildPartition);
    return [sibling1, sibling2];
}
exports.splitIntoTwo = splitIntoTwo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXRJbnRvVHdvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL21pc2Mvc3BsaXRJbnRvVHdvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG1FQUE2RDtBQUM3RCxtR0FBNkY7QUFHN0YsU0FBZ0IsWUFBWSxDQUFDLFVBQWlDO0lBQzVELElBQUksVUFBVSxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7UUFDMUIsT0FBTyxVQUFVLENBQUM7S0FDbkI7SUFFRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDaEQsTUFBTSxnQkFBZ0IsR0FBRyxJQUFBLDBFQUFrQyxFQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRXhFLGlEQUFpRDtJQUNqRCxNQUFNLG1CQUFtQixHQUFHLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDOUQsTUFBTSxvQkFBb0IsR0FBRyxnQkFBZ0IsQ0FBQztJQUU5QyxNQUFNLGFBQWEsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUU3QyxNQUFNLFFBQVEsR0FBRyxJQUFJLGtDQUFjLENBQUM7UUFDbEMsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ2xCLENBQUMsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUNsQixNQUFNLEVBQUUsYUFBYSxDQUFDLE1BQU07UUFDNUIsS0FBSyxFQUFFLGFBQWEsQ0FBQyxLQUFLO0tBQzNCLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxjQUFjLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUc3QyxNQUFNLGFBQWEsR0FBRyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUU5QyxNQUFNLFFBQVEsR0FBRyxJQUFJLGtDQUFjLENBQUM7UUFDbEMsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ2xCLENBQUMsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUNsQixNQUFNLEVBQUUsYUFBYSxDQUFDLE1BQU07UUFDNUIsS0FBSyxFQUFFLGFBQWEsQ0FBQyxLQUFLO0tBQzNCLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUU5QyxPQUFPLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQzlCLENBQUM7QUFwQ0Qsb0NBb0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUlRyZWVSZWN0YW5nbGUgfSBmcm9tIFwiLi4vci10cmVlL1JUcmVlUmVjdGFuZ2xlLmpzXCI7XG5pbXBvcnQgeyBzb3J0UmVjdGFuZ2xlc0J5SGlsYmVydENvb3JkaW5hdGVzIH0gZnJvbSBcIi4vc29ydFJlY3RhbmdsZXNCeUhpbGJlcnRDb29yZGluYXRlcy5qc1wiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdEludG9Ud28ocmVjdGFuZ2xlczogQXJyYXk8UlRyZWVSZWN0YW5nbGU+KTogUlRyZWVSZWN0YW5nbGVbXSB7XG4gIGlmIChyZWN0YW5nbGVzLmxlbmd0aCA8PSAxKSB7XG4gICAgcmV0dXJuIHJlY3RhbmdsZXM7XG4gIH1cblxuICBjb25zdCBwaXZvdCA9IE1hdGguZmxvb3IocmVjdGFuZ2xlcy5sZW5ndGggLyAyKTtcbiAgY29uc3Qgc29ydGVkUmVjdGFuZ2xlcyA9IHNvcnRSZWN0YW5nbGVzQnlIaWxiZXJ0Q29vcmRpbmF0ZXMocmVjdGFuZ2xlcyk7XG5cbiAgLy8gY29uc29sZS5sb2coeyBzb3J0ZWRSZWN0YW5nbGVzLCByZWN0YW5nbGVzIH0pO1xuICBjb25zdCBmaXJzdENoaWxkUGFydGl0aW9uID0gc29ydGVkUmVjdGFuZ2xlcy5zcGxpY2UoMCwgcGl2b3QpO1xuICBjb25zdCBzZWNvbmRDaGlsZFBhcnRpdGlvbiA9IHNvcnRlZFJlY3RhbmdsZXM7XG5cbiAgY29uc3Qgc2libGluZzFDaGlsZCA9IGZpcnN0Q2hpbGRQYXJ0aXRpb25bMF07XG5cbiAgY29uc3Qgc2libGluZzEgPSBuZXcgUlRyZWVSZWN0YW5nbGUoe1xuICAgIHg6IHNpYmxpbmcxQ2hpbGQueCxcbiAgICB5OiBzaWJsaW5nMUNoaWxkLnksXG4gICAgaGVpZ2h0OiBzaWJsaW5nMUNoaWxkLmhlaWdodCxcbiAgICB3aWR0aDogc2libGluZzFDaGlsZC53aWR0aFxuICB9KTtcblxuICBzaWJsaW5nMS5pbnNlcnRDaGlsZHJlbihmaXJzdENoaWxkUGFydGl0aW9uKTtcblxuXG4gIGNvbnN0IHNpYmxpbmcyQ2hpbGQgPSBzZWNvbmRDaGlsZFBhcnRpdGlvblswXTtcblxuICBjb25zdCBzaWJsaW5nMiA9IG5ldyBSVHJlZVJlY3RhbmdsZSh7XG4gICAgeDogc2libGluZzJDaGlsZC54LFxuICAgIHk6IHNpYmxpbmcyQ2hpbGQueSxcbiAgICBoZWlnaHQ6IHNpYmxpbmcyQ2hpbGQuaGVpZ2h0LFxuICAgIHdpZHRoOiBzaWJsaW5nMkNoaWxkLndpZHRoXG4gIH0pO1xuXG4gIHNpYmxpbmcyLmluc2VydENoaWxkcmVuKHNlY29uZENoaWxkUGFydGl0aW9uKTtcblxuICByZXR1cm4gW3NpYmxpbmcxLCBzaWJsaW5nMl07XG59XG4iXX0=